import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

st.title("Previs√£o do IPCA com Regress√£o Linear")

st.markdown("""
### üìä Previs√£o do IPCA com Regress√£o Linear

Este aplicativo tem como objetivo apresentar os resultados de um modelo de regress√£o linear aplicado sobre dados hist√≥ricos do IPCA (√çndice de Pre√ßos ao Consumidor Amplo).

Aqui voc√™ encontrar√°:
- Uma **compara√ß√£o visual** entre os valores reais e previstos do IPCA;
- **M√©tricas de avalia√ß√£o** do modelo, como MSE, MAE e R¬≤;
- Um gr√°fico de **dispers√£o** que mostra a rela√ß√£o entre valores reais e previstos.

""")

# Upload do arquivo CSV com resultados prontos
uploaded_file = st.file_uploader("Escolha o arquivo CSV com os dados de previs√£o", type="csv")

if uploaded_file is not None:
    try:
        # Leitura do CSV
        df = pd.read_csv(uploaded_file, sep=";")
        df.columns = df.columns.str.strip()

        # Exibe os dados
        st.subheader("Resultados da Previs√£o")
        st.dataframe(df[["√çndice geral Real", "√çndice geral Previsto"]])

        # Gr√°fico de dispers√£o (valor previsto vs valor real)
        st.subheader("Gr√°fico de Dispers√£o: Previsto vs Real")
        fig, ax = plt.subplots(figsize=(8,6))
        ax.scatter(df["√çndice geral Real"], df["√çndice geral Previsto"], color='purple', alpha=0.7)
        ax.plot([df["√çndice geral Real"].min(), df["√çndice geral Real"].max()],
                [df["√çndice geral Real"].min(), df["√çndice geral Real"].max()],
                color='gray', linestyle='--', label="Linha de Perfei√ß√£o")
        ax.set_xlabel("√çndice geral Real")
        ax.set_ylabel("√çndice geral Previsto")
        ax.set_title("Compara√ß√£o entre Valores Reais e Previstos")
        ax.legend()
        st.pyplot(fig)

        # M√©tricas
        y_true = df["√çndice geral Real"]
        y_pred = df["√çndice geral Previsto"]
        mse = mean_squared_error(y_true, y_pred)
        mae = mean_absolute_error(y_true, y_pred)
        r2 = r2_score(y_true, y_pred)

        st.subheader("M√©tricas do Modelo")
        st.write(f"Erro Quadr√°tico M√©dio (MSE): {mse:.4f}")
        st.write(f"Erro Absoluto M√©dio (MAE): {mae:.4f}")
        st.write(f"Coeficiente de Determina√ß√£o (R¬≤): {r2:.4f}")

    except Exception as e:
        st.error(f"Ocorreu um erro: {e}")
